generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category {
  id               String           @id @default(dbgenerated("(uuid())")) @db.Char(36)
  word_id          String           @unique @db.Char(36)
  subject          String           @db.VarChar(25)
  words            words            @relation(fields: [word_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "category_ibfk_1")
  category_setting category_setting @relation(fields: [subject], references: [subject])

  @@index([word_id], map: "category_ibfk_1")
}

model token {
  user_id           String    @id @db.Char(36)
  refresh_token     String?   @db.VarChar(100)
  created_at        DateTime  @default(now())
  expired_at        DateTime  @db.Timestamp(0)
  old_refresh_token String?   @db.VarChar(100)
  old_expired_at    DateTime? @db.Timestamp(0)
  users             users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "token_ibfk_1")
}

model users {
  id            String          @id @db.Char(36)
  username      String          @db.VarChar(30)
  email         String          @unique(map: "email_UNIQUE") @db.VarChar(100)
  password      String          @db.VarChar(80)
  created_at    DateTime        @db.Timestamp(0)
  token         token?
  words_storage words_storage[]
  words_daily   words_daily[]
}

model word_mean {
  id                  String @id @default(dbgenerated("(uuid())")) @db.Char(36)
  word_id             String @db.Char(36)
  example_sentence_en String @db.VarChar(80)
  example_sentence_zh String @db.VarChar(80)
  mean_en             String @db.VarChar(80)
  mean_zh             String @db.VarChar(50)
  part_of_speech      String @db.VarChar(30)
  words               words? @relation(fields: [word_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "word_mean_ibfk_1")

  @@index([word_id], map: "word_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model words {
  id            String          @id @default(dbgenerated("(uuid())")) @db.Char(36)
  word          String          @unique(map: "word") @db.VarChar(39)
  pronunciation String?         @db.VarChar(255)
  category      category?
  word_mean     word_mean[]
  words_storage words_storage[]
  words_daily   words_daily[]
}

model words_storage {
  user_id  String    @db.Char(36)
  word_id  String    @db.Char(36)
  learn_at DateTime? @db.Timestamp(0)
  users    users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "words_storage_ibfk_1")
  words    words     @relation(fields: [word_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "words_storage_ibfk_2")

  @@id([user_id, word_id])
  @@index([word_id], map: "word_id")
}

model words_daily {
  word_id    String   @db.Char(36)
  user_id    String   @db.Char(36)
  created_at DateTime @db.Timestamp(0)
  users      users    @relation(fields: [user_id], references: [id])
  words      words    @relation(fields: [word_id], references: [id])

  @@id([word_id, user_id])
}

model category_setting {
  title       String     @db.VarChar(20)
  content     String     @db.VarChar(50)
  subject     String     @id @db.VarChar(25)
  bg_color    String     @db.VarChar(20)
  hover_color String     @db.VarChar(30)
  icon        String     @db.VarChar(20)
  icon_color  String     @db.VarChar(20)
  category    category[]
}
